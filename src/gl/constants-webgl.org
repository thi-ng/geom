#+SETUPFILE: ../../meta/setup.org

* Contents                                                         :toc_4_gh:
 - [[#thinggeomglwebglconstants][thi.ng.geom.gl.webgl.constants]]
     - [[#webgl-10-constants][WebGL 1.0 constants]]
     - [[#complete-namespace-definition][Complete namespace definition]]

* thi.ng.geom.gl.webgl.constants
** WebGL 1.0 constants
#+BEGIN_SRC clojure :noweb-ref const
  (def active-attributes 0x8b89)
  (def active-texture 0x84e0)
  (def active-uniforms 0x8b86)
  (def aliased-line-width-range 0x846e)
  (def aliased-point-size-range 0x846d)
  (def alpha 0x1906)
  (def alpha-bits 0xd55)
  (def always 0x207)
  (def array-buffer 0x8892)
  (def array-buffer-binding 0x8894)
  (def attached-shaders 0x8b85)
  (def back 0x405)
  (def blend 0xbe2)
  (def blend-color 0x8005)
  (def blend-dst-alpha 0x80ca)
  (def blend-dst-rgb 0x80c8)
  (def blend-equation 0x8009)
  (def blend-equation-alpha 0x883d)
  (def blend-equation-rgb 0x8009)
  (def blend-src-alpha 0x80cb)
  (def blend-src-rgb 0x80c9)
  (def blue-bits 0xd54)
  (def bool 0x8b56)
  (def bool-vec2 0x8b57)
  (def bool-vec3 0x8b58)
  (def bool-vec4 0x8b59)
  (def browser-default-webgl 0x9244)
  (def buffer-size 0x8764)
  (def buffer-usage 0x8765)
  (def byte 0x1400)
  (def ccw 0x901)
  (def clamp-to-edge 0x812f)
  (def color-attachment0 0x8ce0)
  (def color-buffer-bit 0x4000)
  (def color-clear-value 0xc22)
  (def color-writemask 0xc23)
  (def compile-status 0x8b81)
  (def compressed-texture-formats 0x86a3)
  (def constant-alpha 0x8003)
  (def constant-color 0x8001)
  (def context-lost-webgl 0x9242)
  (def cull-face 0xb44)
  (def cull-face-mode 0xb45)
  (def current-program 0x8b8d)
  (def current-vertex-attrib 0x8626)
  (def cw 0x900)
  (def decr 0x1e03)
  (def decr-wrap 0x8508)
  (def delete-status 0x8b80)
  (def depth-attachment 0x8d00)
  (def depth-bits 0xd56)
  (def depth-buffer-bit 0x100)
  (def depth-clear-value 0xb73)
  (def depth-component 0x1902)
  (def depth-component16 0x81a5)
  (def depth-func 0xb74)
  (def depth-range 0xb70)
  (def depth-stencil 0x84f9)
  (def depth-stencil-attachment 0x821a)
  (def depth-test 0xb71)
  (def depth-writemask 0xb72)
  (def dither 0xbd0)
  (def dont-care 0x1100)
  (def drawing-buffer-height 0x1e0)
  (def drawing-buffer-width 0x280)
  (def dst-alpha 0x304)
  (def dst-color 0x306)
  (def dynamic-draw 0x88e8)
  (def element-array-buffer 0x8893)
  (def element-array-buffer-binding 0x8895)
  (def equal 0x202)
  (def fastest 0x1101)
  (def float 0x1406)
  (def float-mat2 0x8b5a)
  (def float-mat3 0x8b5b)
  (def float-mat4 0x8b5c)
  (def float-vec2 0x8b50)
  (def float-vec3 0x8b51)
  (def float-vec4 0x8b52)
  (def fragment-shader 0x8b30)
  (def framebuffer 0x8d40)
  (def framebuffer-attachment-object-name 0x8cd1)
  (def framebuffer-attachment-object-type 0x8cd0)
  (def framebuffer-attachment-texture-cube-map-face 0x8cd3)
  (def framebuffer-attachment-texture-level 0x8cd2)
  (def framebuffer-binding 0x8ca6)
  (def framebuffer-complete 0x8cd5)
  (def framebuffer-incomplete-attachment 0x8cd6)
  (def framebuffer-incomplete-dimensions 0x8cd9)
  (def framebuffer-incomplete-missing-attachment 0x8cd7)
  (def framebuffer-unsupported 0x8cdd)
  (def front 0x404)
  (def front-and-back 0x408)
  (def front-face 0xb46)
  (def func-add 0x8006)
  (def func-reverse-subtract 0x800b)
  (def func-subtract 0x800a)
  (def generate-mipmap-hint 0x8192)
  (def gequal 0x206)
  (def greater 0x204)
  (def green-bits 0xd53)
  (def high-float 0x8df2)
  (def high-int 0x8df5)
  (def incr 0x1e02)
  (def incr-wrap 0x8507)
  (def int 0x1404)
  (def int-vec2 0x8b53)
  (def int-vec3 0x8b54)
  (def int-vec4 0x8b55)
  (def invalid-enum 0x500)
  (def invalid-framebuffer-operation 0x506)
  (def invalid-operation 0x502)
  (def invalid-value 0x501)
  (def invert 0x150a)
  (def keep 0x1e00)
  (def lequal 0x203)
  (def less 0x201)
  (def line-loop 0x2)
  (def line-strip 0x3)
  (def line-width 0xb21)
  (def linear 0x2601)
  (def linear-mipmap-linear 0x2703)
  (def linear-mipmap-nearest 0x2701)
  (def lines 0x1)
  (def link-status 0x8b82)
  (def low-float 0x8df0)
  (def low-int 0x8df3)
  (def luminance 0x1909)
  (def luminance-alpha 0x190a)
  (def max-combined-texture-image-units 0x8b4d)
  (def max-cube-map-texture-size 0x851c)
  (def max-fragment-uniform-vectors 0x8dfd)
  (def max-renderbuffer-size 0x84e8)
  (def max-texture-image-units 0x8872)
  (def max-texture-size 0xd33)
  (def max-varying-vectors 0x8dfc)
  (def max-vertex-attribs 0x8869)
  (def max-vertex-texture-image-units 0x8b4c)
  (def max-vertex-uniform-vectors 0x8dfb)
  (def max-viewport-dims 0xd3a)
  (def medium-float 0x8df1)
  (def medium-int 0x8df4)
  (def mirrored-repeat 0x8370)
  (def nearest 0x2600)
  (def nearest-mipmap-linear 0x2702)
  (def nearest-mipmap-nearest 0x2700)
  (def never 0x200)
  (def nicest 0x1102)
  (def no-error 0x0)
  (def none 0x0)
  (def notequal 0x205)
  (def one 0x1)
  (def one-minus-constant-alpha 0x8004)
  (def one-minus-constant-color 0x8002)
  (def one-minus-dst-alpha 0x305)
  (def one-minus-dst-color 0x307)
  (def one-minus-src-alpha 0x303)
  (def one-minus-src-color 0x301)
  (def out-of-memory 0x505)
  (def pack-alignment 0xd05)
  (def points 0x0)
  (def polygon-offset-factor 0x8038)
  (def polygon-offset-fill 0x8037)
  (def polygon-offset-units 0x2a00)
  (def red-bits 0xd52)
  (def renderbuffer 0x8d41)
  (def renderbuffer-alpha-size 0x8d53)
  (def renderbuffer-binding 0x8ca7)
  (def renderbuffer-blue-size 0x8d52)
  (def renderbuffer-depth-size 0x8d54)
  (def renderbuffer-green-size 0x8d51)
  (def renderbuffer-height 0x8d43)
  (def renderbuffer-internal-format 0x8d44)
  (def renderbuffer-red-size 0x8d50)
  (def renderbuffer-stencil-size 0x8d55)
  (def renderbuffer-width 0x8d42)
  (def renderer 0x1f01)
  (def repeat 0x2901)
  (def replace 0x1e01)
  (def rgb 0x1907)
  (def rgb5-a1 0x8057)
  (def rgb565 0x8d62)
  (def rgba 0x1908)
  (def rgba4 0x8056)
  (def sample-alpha-to-coverage 0x809e)
  (def sample-buffers 0x80a8)
  (def sample-coverage 0x80a0)
  (def sample-coverage-invert 0x80ab)
  (def sample-coverage-value 0x80aa)
  (def sampler-2d 0x8b5e)
  (def sampler-cube 0x8b60)
  (def samples 0x80a9)
  (def scissor-box 0xc10)
  (def scissor-test 0xc11)
  (def shader-type 0x8b4f)
  (def shading-language-version 0x8b8c)
  (def short 0x1402)
  (def src-alpha 0x302)
  (def src-alpha-saturate 0x308)
  (def src-color 0x300)
  (def static-draw 0x88e4)
  (def stencil-attachment 0x8d20)
  (def stencil-back-fail 0x8801)
  (def stencil-back-func 0x8800)
  (def stencil-back-pass-depth-fail 0x8802)
  (def stencil-back-pass-depth-pass 0x8803)
  (def stencil-back-ref 0x8ca3)
  (def stencil-back-value-mask 0x8ca4)
  (def stencil-back-writemask 0x8ca5)
  (def stencil-bits 0xd57)
  (def stencil-buffer-bit 0x400)
  (def stencil-clear-value 0xb91)
  (def stencil-fail 0xb94)
  (def stencil-func 0xb92)
  (def stencil-index 0x1901)
  (def stencil-index8 0x8d48)
  (def stencil-pass-depth-fail 0xb95)
  (def stencil-pass-depth-pass 0xb96)
  (def stencil-ref 0xb97)
  (def stencil-test 0xb90)
  (def stencil-value-mask 0xb93)
  (def stencil-writemask 0xb98)
  (def stream-draw 0x88e0)
  (def subpixel-bits 0xd50)
  (def texture 0x1702)
  (def texture-2d 0xde1)
  (def texture-binding-2d 0x8069)
  (def texture-binding-cube-map 0x8514)
  (def texture-cube-map 0x8513)
  (def texture-cube-map-negative-x 0x8516)
  (def texture-cube-map-negative-y 0x8518)
  (def texture-cube-map-negative-z 0x851a)
  (def texture-cube-map-positive-x 0x8515)
  (def texture-cube-map-positive-y 0x8517)
  (def texture-cube-map-positive-z 0x8519)
  (def texture-mag-filter 0x2800)
  (def texture-min-filter 0x2801)
  (def texture-wrap-s 0x2802)
  (def texture-wrap-t 0x2803)
  (def texture0 0x84c0)
  (def texture1 0x84c1)
  (def texture10 0x84ca)
  (def texture11 0x84cb)
  (def texture12 0x84cc)
  (def texture13 0x84cd)
  (def texture14 0x84ce)
  (def texture15 0x84cf)
  (def texture16 0x84d0)
  (def texture17 0x84d1)
  (def texture18 0x84d2)
  (def texture19 0x84d3)
  (def texture2 0x84c2)
  (def texture20 0x84d4)
  (def texture21 0x84d5)
  (def texture22 0x84d6)
  (def texture23 0x84d7)
  (def texture24 0x84d8)
  (def texture25 0x84d9)
  (def texture26 0x84da)
  (def texture27 0x84db)
  (def texture28 0x84dc)
  (def texture29 0x84dd)
  (def texture3 0x84c3)
  (def texture30 0x84de)
  (def texture31 0x84df)
  (def texture4 0x84c4)
  (def texture5 0x84c5)
  (def texture6 0x84c6)
  (def texture7 0x84c7)
  (def texture8 0x84c8)
  (def texture9 0x84c9)
  (def triangle-fan 0x6)
  (def triangle-strip 0x5)
  (def triangles 0x4)
  (def unpack-alignment 0xcf5)
  (def unpack-colorspace-conversion-webgl 0x9243)
  (def unpack-flip-y-webgl 0x9240)
  (def unpack-premultiply-alpha-webgl 0x9241)
  (def unsigned-byte 0x1401)
  (def unsigned-int 0x1405)
  (def unsigned-short 0x1403)
  (def unsigned-short-4-4-4-4 0x8033)
  (def unsigned-short-5-5-5-1 0x8034)
  (def unsigned-short-5-6-5 0x8363)
  (def validate-status 0x8b83)
  (def vendor 0x1f00)
  (def version 0x1f02)
  (def vertex-attrib-array-buffer-binding 0x889f)
  (def vertex-attrib-array-enabled 0x8622)
  (def vertex-attrib-array-normalized 0x886a)
  (def vertex-attrib-array-pointer 0x8645)
  (def vertex-attrib-array-size 0x8623)
  (def vertex-attrib-array-stride 0x8624)
  (def vertex-attrib-array-type 0x8625)
  (def vertex-shader 0x8b31)
  (def viewport 0xba2)
  (def zero 0x0)
#+END_SRC

** Complete namespace definition

#+BEGIN_SRC clojure :tangle ../../babel/src/thi/ng/geom/gl/webgl/constants.cljs :noweb yes :mkdirp yes :padline no
  (ns thi.ng.geom.gl.webgl.constants
    (:refer-clojure :exclude [byte float int short keep repeat replace]))

  <<const>>
#+END_SRC
